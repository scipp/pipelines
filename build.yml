parameters:
- name: py_version
  type: string
  default: ''
- name: image
  type: string
  default: ''
- name: ccache
  type: boolean
  default: false
- name: OSX_VERSION
  type: string
  default: ''
- name: conda_package_root
  type: string
  default: ''
- name: conda_env
  type: string
  default: ''
- name: conda_channels
  type: string
  default: ''
- name: verbose
  type: boolean
  default: false

jobs:
  - job:
    timeoutInMinutes: 120
    displayName: ${{ format('{0}-py{1}', parameters.image, parameters.py_version) }}
    pool:
      vmImage: ${{ parameters.image }}
    variables:
      - name: OSX_VERSION
        value: ${{ parameters.OSX_VERSION }}
      - name: VERBOSE_OPTION
        value: ''

    steps:
      - checkout: self
        submodules: true

      - ${{ if eq(parameters.ccache, true) }}:
        - template: ccache.yml

      # Note that using set -ex when setting vso variables messes up paths
      - ${{ if contains(parameters.image, 'windows') }}:
        - bash: |
            echo "##vso[task.prependpath]$CONDA\Scripts"
            echo "##vso[task.setvariable variable=scipp_install_prefix]$CONDA\scipp_install"
          displayName: 'Configure Conda path'
      - ${{ if not(contains(parameters.image, 'windows')) }}:
        - bash: |
            echo "##vso[task.prependpath]$CONDA/bin"
            echo "##vso[task.setvariable variable=scipp_install_prefix]$CONDA/scipp_install"
          displayName: 'Configure Conda path'

      - bash: |
          echo "##vso[task.setvariable variable=conda_dir]$CONDA"
        displayName: 'Configure Conda dir'
      - ${{ if not(eq(length(parameters.OSX_VERSION), 0)) }}:
        - bash: |
            set -ex
            sudo chown -R $USER $CONDA
          displayName: 'Take ownership of Conda installation'

      - bash: |
          set -ex
          conda --version
          conda install --yes conda-build
          conda config --set always_yes yes --set changeps1 no
        displayName: 'Install conda-build'

      - bash: |
          if [ test -f tools/build_cpp.py ]; then
             echo "##vso[task.setvariable variable=fileExists]true"
          fi
        displayName: 'Check for existence of cpp build file'

      - bash: |
          set -ex
          # Specify python version in env file
          sed 's/- python$/- python=${{ parameters.py_version }}/g' ${{ parameters.conda_env }} > tempenv.yml
          conda env create -f tempenv.yml -n tempenv
        displayName: 'Create conda environment'
        condition: eq(variables['fileExists'], 'true')

      - bash: |
          set -ex
          source activate tempenv
          python tools/build_cpp.py --prefix=$SCIPP_INSTALL_PREFIX
        displayName: 'Build and run C++ tests'
        condition: eq(variables['fileExists'], 'true')

      - ${{ if eq(parameters.verbose, true) }}:
        - bash: |
            echo "##vso[task.setvariable variable=verbose_option]--debug"
          displayName: 'Activate conda build debug mode'

      - bash: |
          set -ex
          conda build $VERBOSE_OPTION \
            --channel conda-forge ${{ parameters.conda_channels }} \
            --python=${{ parameters.py_version }} --no-anaconda-upload conda \
            --override-channels
        displayName: 'Python tests and conda build'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: "$(conda_dir)/conda-bld/${{ parameters.conda_package_root }}"
          ArtifactName: "${{ parameters.conda_package_root }}-py${{ parameters.py_version }}"
        displayName: 'Archive Conda package artifacts'

      - ${{ if eq(parameters.ccache, true) }}:
        - bash: ccache --show-stats
          displayName: 'Report ccache statistics'
