parameters:
- name: image
  type: string
  default: ''

stages:
  - stage: 'code_quality'
    displayName: 'Code Quality'

    jobs:
      - job: 'code_quality_checks'
        displayName: 'Code Quality'
        pool:
          vmImage: ${{ parameters.image }}
        steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.x'
              addToPath: true
              architecture: 'x64'

          - bash: |
              set -ex
              sudo apt-get install --yes clang-format-10 cppcheck
              pip install cmake_format==0.6.9 flake8 yapf==0.30.0
            displayName: 'Install tooling'

          - bash: |
              set -ex
              clang-format-10 --version
              # Run clang-format in-place on all C++ files, excluding third party libraries
              find . -type f -regex '.*\.\(c\|cpp\|h\|hpp\|tcc\)' -not -path './common/include/scipp/common/span/*' -exec clang-format-10 -i {} +
              # Show the diff to give an indication of the issues in the CI log
              # Use exit-code to fail if any formatting was done
              git diff --exit-code
            displayName: 'Run clang-format'

          - bash: |
              set -ex
              if [ $(find . -type f \( -iname \*.cpp -o \
                                       -iname \*.h -o \
                                       -iname \*.tcc -o \
                                       -iname \*.hpp -o \
                                       -iname \*.hh -o \
                                       -iname \*.c \) | wc -l) -gt 0 ]; then
                cppcheck --quiet --force --std=c++17 --enable=all -i common/include/scipp/common/span/ .
              fi
            displayName: 'Run cppcheck'

          - bash: |
              set -ex
              cmake-format --version
              # Perform format checking on all CMake files
              find . -type f -name CMakeLists.txt -or -name '*.cmake' | xargs cmake-format -i
              git diff --exit-code
            displayName: 'Run cmake-format'

          - bash: |
              set -ex
              # Find all occurances of "YYYY Scipp contributors" and replace YYYY with the current year
              find . -type f -not -path '.git/*' -exec sed -ri "s/[0-9]{4} (Scipp contributors)/$(date +%Y) \1/g" {} +
              git diff --exit-code
            displayName: 'Check Copyright years are up to date'

          - bash: |
              set -ex
              flake8 --version
              # Perform format checking on all Python files
              find . -type f -name '*.py' | xargs flake8
            displayName: 'Run flake8'

          - bash: |
              set -ex
              yapf --version
              # Perform format checking on all Python API files
              yapf --diff --recursive 'python'
            displayName: 'Run yapf'
