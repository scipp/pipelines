parameters:
- name: image
  default: ''
- name: conda_package_root
  type: string
  default: ''
# - name: conda_env
#   type: string
#   default: ''
# - name: py_version
#   type: string
#   default: ''
- name: config
  type: object
  default: []
- name: build_package
  type: boolean
  default: true


stages:
  - stage: 'documentation'
    displayName: 'Documentation'

    jobs:
      - job: 'documentation_build'
        displayName: 'Documentation build'
        pool:
          vmImage: ${{ parameters.image }}
        variables:
          packages_dir: '$(Build.StagingDirectory)/packages'
          docs_build_dir: '$(Build.StagingDirectory)/docs_build'
          # package_name: ${{ parameters.conda_package_root }}-py${{ parameters.py_version }}
        steps:
          - bash: |
              set -ex
              mkdir -p "$(packages_dir)"
              mkdir -p "$(docs_build_dir)"
            displayName: 'Make directories'
          - ${{ each py in config.py_versions }}:
            - bash: |
                echo "##vso[task.setvariable variable=scipp_pyversion_list]${{ py }}:$SCIPP_PYVERSION_LIST"
              displayName: 'Collect python versions'
          - bash: |
              echo "##vso[task.setvariable variable=scipp_python_version]$(echo '$SCIPP_PYVERSION_LIST' | cut -d ':' -f 1)"
              echo "##vso[task.setvariable variable=package_name]${{ parameters.conda_package_root }}-py$SCIPP_PYTHON_VERSION"
            displayName: 'Select first py version in list'
          - ${{ if eq(parameters.build_package, true) }}:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                specificBuildWithTriggering: true
                downloadType: 'single'
                # artifactName: '$(package_name)'
                artifactName: '$PACKAGE_NAME'
                downloadPath: '$(packages_dir)'
              displayName: 'Download previously built conda package'
          - bash: |
              echo "##vso[task.prependpath]$CONDA/bin"
            displayName: Add Conda to PATH
          - bash: |
              set -ex
              if [ '$SCIPP_PYTHON_VERSION' == 'noarch' ]; then
                cat ${{ parameters.conda_env }} > tempenv.yml
              else
                # Specify python version in env file
                sed 's/- python$/- python=$SCIPP_PYTHON_VERSION/g' ${{ parameters.conda_env }} > tempenv.yml
              fi
              conda env create -f tempenv.yml -n tempenv
            displayName: 'Create Conda environment'
          - ${{ if eq(parameters.build_package, true) }}:
            - bash: |
                set -ex
                source activate tempenv
                conda install "$(packages_dir)/$PACKAGE_NAME/"*.tar.bz2
              displayName: 'Install previously built conda package'
          - bash: |
              set -ex
              cd docs
              source activate tempenv
              python build_docs.py --builder=html --prefix=$(docs_build_dir) --work_dir=$(mktemp -d)
              # Remove Jupyter notebooks used for documentation build,
              # they are not accessible and create size bloat
              find "$(docs_build_dir)" -type f -name '*.ipynb' -delete
            displayName: 'Build documentation'
          - bash: |
              set -ex
              cd docs
              source activate tempenv
              python build_docs.py --builder=doctest --prefix=$(docs_build_dir) --work_dir=$(mktemp -d) --no-setup
            displayName: 'Run doctest'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(docs_build_dir)'
              ArtifactName: 'documentation'
            displayName: 'Publish documentation artifacts'
